"""changing user and inbound in client model to user.id and inbound.id

Revision ID: 6bdff6e395dc
Revises: b58108415755
Create Date: 2024-05-20 18:18:55.271472

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6bdff6e395dc"
down_revision: Union[str, None] = "b58108415755"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("clients", sa.Column("user_id", sa.Integer(), nullable=False))
    op.add_column("clients", sa.Column("inbound_id", sa.Integer(), nullable=False))
    op.create_unique_constraint(
        "_inbound_user_uc", "clients", ["user_id", "inbound_id"]
    )
    op.drop_constraint("clients_user_fkey", "clients", type_="foreignkey")
    op.drop_constraint("clients_inbound_fkey", "clients", type_="foreignkey")
    op.create_foreign_key(
        None, "clients", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "clients", "inbounds", ["inbound_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("clients", "user")
    op.drop_column("clients", "inbound")
    op.drop_constraint("_host_location_uc", "inbounds", type_="unique")
    op.create_unique_constraint(
        "_host_inbound_id_uc", "inbounds", ["host", "inbound_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("_host_inbound_id_uc", "inbounds", type_="unique")
    op.create_unique_constraint("_host_location_uc", "inbounds", ["host", "inbound_id"])
    op.add_column(
        "clients",
        sa.Column("inbound", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "clients", sa.Column("user", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "clients", type_="foreignkey")
    op.drop_constraint(None, "clients", type_="foreignkey")
    op.create_foreign_key(
        "clients_inbound_fkey",
        "clients",
        "inbounds",
        ["inbound"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "clients_user_fkey", "clients", "users", ["user"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("_inbound_user_uc", "clients", type_="unique")
    op.drop_column("clients", "inbound_id")
    op.drop_column("clients", "user_id")
    # ### end Alembic commands ###
